@import url('https://fonts.googleapis.com/css2?family=Nunito:wght@300&family=Quicksand&family=Raleway:wght@200&family=Roboto:wght@300&family=Saira:wght@200&display=swap');
@import url('./components.css');
/* -------------------------------------------------- GENERAL ---------------------------------------------------- */

/*
    Prevents flash of white on dark mode.
    Cannot pre-emptively check for dark mode as the theme
    is not known until it is too late
 */
body:not([data-theme]) {
    --bg: #838383;
}

/*
    Dark mode styles, also default.
 */
:root,
[data-theme='dark'] {
    --text-v-light: #909090;

    --label-bg: #c0c0c0;
    --label-text: #000000;
    --label-border: #e0e0e0;

    --nav-height: 70px;

    --nav-border-bottom: #076207;

    --text: #ffffff;
    --nav-colour: #494949;
    --text-light: #dedede;
    --bg: #343434;
    --bg-accent: #505050;
    --accent: #076207;
    --text-warning: #ff8d8d;
    --border: #646464;
    --border-light: #545454;
}

[data-theme='light'] {
    --nav-colour: var(--bg);

    --bg: #eeeeee;
    --bg-accent: white;
    --accent: #15cb15;
    --nav-border-bottom: #15cb15;

    --text-warning: red;

    --border: #c5c5c5;
    --border-light: #e8e8e8;

    --text: #000000;
    --text-light: #575757;
}

* {
    transition: 200ms;
}

/* -------------------------------------------------- RESERVOIR ---------------------------------------------------- */

/*
    Only hide when the component is a for loop and has not been initialised yet
 */
[foreach]:not([foreach-dry]) {
    display: none !important;
}

/*
    This won't interfere with the element's display as the hidden attribute is
    only present on elements which are either yet to be parsed, or have been parsed
    and decided that they should be hidden.
*/
[hidden] {
    display: none !important;
}

.reservoir-container {
    display: contents;
}

/* -------------------------------------------------- STRUCTURE ---------------------------------------------------- */

html,
body {
    padding: 0;
    margin: 0;
    background: var(--bg);
}

main {
    min-height: calc(100vh - var(--nav-height));
    padding: 10px;
}

html,
body,
main {
    margin: 0;
}

.flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
}

.vertical-flex-center {
    display: flex;
    align-items: center;
}

.flex-wrap {
    display: flex;
    align-content: flex-start;
    max-width: 100%;
    flex-wrap: wrap;
}

.fill-screen {
    width: 100%;
    height: 100vh;
}

section {
    border-bottom: 1px solid var(--border);
    padding-bottom: 20px;
}

.bordered {
    border: 1px solid var(--border);
    border-radius: 10px;
}

section:last-child {
    border-bottom: none;
}

hr {
    border: none;
    border-top: 1px solid var(--border);
}

@media only screen and (max-aspect-ratio: 6/5) {
    .hide-mobile {
        display: none !important;
    }
}

/* -------------------------------------------------- INPUT ---------------------------------------------------- */

input,
button,
textarea {
    border: none;
    background: none;
    font-size: 17px;
    outline: none;
}

input {
    border-bottom: 2px solid var(--border);
    border-radius: 10px 10px 0 0;
    padding: 6px;
}

input:hover {
    border-bottom: 2px solid var(--accent);
}

input:focus {
    background: var(--bg-accent);
}

.editable-text {
    border: 1px solid transparent;
    background: transparent;
    font: inherit;
    transition: 300ms;
    border-radius: 0;
}

.editable-text:hover {
    border: 1px solid transparent;
    background: transparent;
    color: var(--text-light);
}

.editable-text:focus {
    border: 1px solid var(--border);
    background: transparent;
    color: var(--text);
}

textarea {
    border: 1px solid var(--border);
    border-radius: 0 0 10px 10px;
    margin: 10px;
    padding: 10px;
    resize: vertical;
    transition: 0s;
}

.big-link {
    margin: 20px;
    font-size: 20px;
    text-decoration: none;
    border-radius: 10px;
    background-color: var(--accent);
    height: fit-content;
    width: fit-content;
    border: none;
    padding: 10px;
    display: grid;
    /* assumed one svg icon and then text */
    grid-template-columns: 60px 1fr;
    align-items: center;
    cursor: pointer;
}

.big-link:hover {
    background-color: var(--bg-accent);
}

.big-link:hover svg {
    fill: var(--accent);
}

.big-link.secondary {
    background-color: transparent;
    border: 1px solid var(--border);
}

.big-link.secondary:hover {
    border-color: var(--accent);
    box-shadow: 0 0 6px 2px var(--border-light);
}

input,
button,
textarea {
    font-family: 'Quicksand', sans-serif;
}

a:hover,
a:focus,
button:hover,
button:focus,
input:hover,
input:focus,
textarea:hover,
textarea:focus {
    color: var(--text-light);
}

input,
textarea {
    font-size: 18px;
}

button,
a {
    cursor: pointer;
}

input,
textarea {
    cursor: text;
}

select {
    background: var(--bg-accent);
    outline: none;
    border-radius: 6px;
    border: none;
    padding: 4px;
    min-width: 40px;
}

/* -------------------------------------------------- TEXT ---------------------------------------------------- */

* {
    color: var(--text);
}

body {
    font-family: 'Nunito', sans-serif;
}

h1 {
    font-size: 30px;
    text-align: center;
    font-family: 'Saira', sans-serif;
}

h2 {
    margin: 20px;
    padding-top: 20px;
    font-size: 25px;
    color: var(--text-light);
}

h2,
h3 {
    font-family: 'Raleway', sans-serif;
}

@media only screen and (max-aspect-ratio: 6/5) {
    * {
        transition: 0ms;
        max-width: 100vw;
    }

    body {
        position: static;
    }

    html,
    body,
    main {
        padding: 0;
        margin: 0;
        width: 100%;
    }

    html,
    body {
        min-height: 100vh;
    }
}

.ct-label {
    color: var(--text) !important;
    fill: var(--text) !important;
}

/* Settings Button */

.settings-button {
    position: fixed;
    bottom: 15px;
    right: 15px;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
}

.settings-button svg {
    fill: var(--text-light);
}

/* ------------------------------------------------- NAV & FOOTER -------------------------------------------------- */


footer {
    height: 200px;
    background: var(--bg-accent);
    padding: 0;
    margin: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
}

nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 5px;
    background: var(--nav-colour);
    height: var(--nav-height);
    width: calc(100% - 10px);
    border-bottom: 2px solid var(--nav-border-bottom);
}

#nav-left,
#nav-right {
    min-width: 50px;
    width: fit-content;
    display: flex;
    justify-content: space-between;
    align-items: center;
}
#nav-left > *,
#nav-right > *{
    padding: 0 5px;
}

#home-link {
    display: flex;
    align-items: center;
    justify-content: center;
    width: fit-content;
}

.nav-item {
    position: relative;
    display: inline-block;
}

.nav-item .nav-item-dropdown {
    display: none;
    position: absolute;
    background-color: #f9f9f9;
    width: 200px;
    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);
    padding: 12px 16px;
    z-index: 2;
    background: var(--bg-accent);
}

.nav-item:hover .nav-item-dropdown {
    display: block;
}

.nav-item .nav-item-dropdown > * {
    width: 100%;
    background: transparent;
    display: grid;
    /* assumed one svg icon and then text */
    grid-template-columns: 40px 1fr;
    align-items: center;
    cursor: pointer;
}

/* to stop the page expanding to the right when hovered */
#nav-right > *:last-child {
    transform: translate(-5px, -2px);
}